local hook;
local wait = task.wait;
local fluxSecurityCode;
local fluxDecodeKey;

local HTTPService = game:FindService("HttpService");
local RemoteEvent = game:FindService("ReplicatedStorage").Events.RemoteEvent;

local workspace = game:FindService("Workspace");

local function _(v17, v18, v19) --[[ Line: 48 ]] --[[ Name: net_convert ]]
    return (string.char((string.byte(v17) - 32 + (v19 and -v18 or v18)) % 95 + 32));
end;
local function v31(v21, v22, v23) --[[ Line: 52 ]] --[[ Name: net_encode ]]
    local v24 = "";
    for v25 = 1, #v21 do
        if v25 <= #v21 - v22[5] or not v23 then
            for v26 = 0, 3 do
                if v25 % 4 == v26 then
                    local l_v24_0 = v24;
                    local v28 = string.sub(v21, v25, v25);
                    local v29 = v22[v26 + 1];
                    v24 = l_v24_0 .. string.char((string.byte(v28) - 32 + (v23 and -v29 or v29)) % 95 + 32);
                    break;
                end;
            end;
        end;
    end;
    if not v23 then
        for v30 = 1, v22[5] do
            v24 = v24 .. string.char(string.byte(v21) - string.byte(v30));
        end;
    end;
    return v24;
end;

hook = hookmetamethod(game, "__namecall", function(Self, ...)
    local Method = getnamecallmethod();
    local Args = {...};

   if Method == "JSONDecode" then
        print(type(Args[1]))
        fluxDecodeKey = Args[1];
    end;

    if Method == "JSONEncode" then
        fluxSecurityCode = unpack(Args[1]);
    end;

    return hook(Self, ...);
end);


repeat wait() until fluxDecodeKey and fluxSecurityCode;


print("Flux decode key", fluxDecodeKey)
print("Flus security code", fluxSecurityCode)


while wait() do
  for _,v in workspace.Special.Doors:GetDescendants() do
    if tostring(v) == "LCZ" or tostring(v) == "HCZ" and v:FindFirstChild("Buttons")  then
      RemoteEvent:FireServer(v31(HTTPService:JSONEncode({fluxSecurityCode, "interactWith", "Door", v.Config.Id.Value}), HTTPService:JSONDecode(fluxDecodeKey)))
    end;
end;
end;
